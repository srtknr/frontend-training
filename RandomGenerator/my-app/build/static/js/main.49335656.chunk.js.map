{"version":3,"sources":["App.js","index.js"],"names":["RandomGenerate","state","topValue","bottomValue","fontValue","url","memes","setValue","value","key","setState","renderPhoto","randomNumber","Number","Math","floor","random","length","fetch","then","response","json","myJson","dataArray","data","spanStyle","fontSize","this","renderFull","className","type","placeholder","onChange","e","target","onClick","style","src","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kPAIqBA,G,iNAEnBC,MAAQ,CACNC,SAAU,QACVC,YAAa,YACbC,UAAW,GACXC,IAAK,KACLC,MAAO,I,EAoBPC,SAAW,SAACC,EAAOC,GACjB,EAAKC,SAAL,eACGD,EAAMD,K,EAIZG,YAAc,WACX,IAAIC,EAAeC,OAAOC,KAAKC,MAAMD,KAAKE,SAAS,EAAKf,MAAMK,MAAMW,SAEpE,EAAKP,SAAS,CACZL,IAAM,EAAKJ,MAAMK,MAAMM,GAAcP,O,mFA3BpB,IAAD,OAClBa,MAAM,qCACHC,KAAK,SAASC,GACf,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJ,IAAIC,EAAaD,EAAOE,KAAKlB,MACzBM,EAAeC,OAAOC,KAAKC,MAAoB,IAAdD,KAAKE,WAE1C,EAAKN,SAAS,CACZJ,MAAOiB,EACPlB,IAAMkB,EAAUX,GAAcP,U,+BAsB3B,IAAD,OAEFoB,EAAY,CAChBC,SAAUC,KAAK1B,MAAMG,UAAW,MAG5BwB,EACJ,yBAAKC,UAAU,QACb,yBAAKA,UAAU,UACf,2BAAOC,KAAK,OAAOC,YAAY,wBAAwBF,UAAU,YAAYrB,MAAOmB,KAAK1B,MAAMC,SAAW8B,SAAU,SAACC,GAAD,OAAO,EAAK1B,SAAS0B,EAAEC,OAAO1B,MAAO,eACzJ,2BAAOsB,KAAK,OAAOC,YAAY,2BAA2BF,UAAU,eAAerB,MAAOmB,KAAK1B,MAAME,YAAa6B,SAAU,SAACC,GAAD,OAAO,EAAK1B,SAAS0B,EAAEC,OAAO1B,MAAO,kBACjK,2BAAOsB,KAAK,SAASC,YAAY,yBAAyBF,UAAU,kBAAkBrB,MAAOmB,KAAK1B,MAAMG,UAAY4B,SAAU,SAACC,GAAD,OAAO,EAAK1B,SAAS0B,EAAEC,OAAO1B,MAAO,gBACnK,4BAAQsB,KAAK,SAASK,QAASR,KAAKhB,aAApC,aAEA,yBAAKkB,UAAU,SACb,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,WAAWO,MAAOX,GAAlC,IAA+CE,KAAK1B,MAAMC,SAA1D,MAEF,yBAAK2B,UAAU,SACb,yBAAKQ,IAAKV,KAAK1B,MAAMI,OAEvB,yBAAKwB,UAAU,yBACf,0BAAMA,UAAU,cAAcO,MAAOX,GAArC,IAAkDE,KAAK1B,MAAME,YAA7D,QAMN,OACE,yBAAK0B,UAAU,aACbD,O,GAzEoCU,IAAMC,YCElDC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.49335656.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nexport default class RandomGenerate extends React.Component {\n  \n  state = {\n    topValue: \"React\",\n    bottomValue: \"Generator\",\n    fontValue: 70,\n    url: null,\n    memes: [],\n  }\n    \n    componentDidMount() {\n      fetch('https://api.imgflip.com/get_memes')\n        .then(function(response) {\n        return response.json();\n      })\n      .then(myJson => {\n        let dataArray = (myJson.data.memes);      \n        let randomNumber = Number(Math.floor(Math.random()*100));\n        \n        this.setState({\n          memes: dataArray,\n          url : dataArray[randomNumber].url,\n        });\n      });\n    }\n  \n    \n    setValue = (value, key) => {\n      this.setState({\n        [key]: value,\n      });\n    };\n\n   renderPhoto = () => {\n      let randomNumber = Number(Math.floor(Math.random()*this.state.memes.length));\n      \n      this.setState({\n        url : this.state.memes[randomNumber].url,\n      });\n    };\n      \n    \n\n  render () {\n\n    const spanStyle = {\n      fontSize: this.state.fontValue +\"px\",\n    };\n\n    const renderFull = (\n      <div className=\"page\">\n        <div className=\"header\">\n        <input type=\"text\" placeholder=\"Please enter top text\" className=\"input-top\" value={this.state.topValue}  onChange={(e) => this.setValue(e.target.value, \"topValue\")} />\n        <input type=\"text\" placeholder=\"Please enter bottom text\" className=\"input-bottom\" value={this.state.bottomValue} onChange={(e) => this.setValue(e.target.value, \"bottomValue\")} />\n        <input type=\"number\" placeholder=\"Please enter font size\" className=\"input-font-size\" value={this.state.fontValue}  onChange={(e) => this.setValue(e.target.value, \"fontValue\")} />\n        <button type=\"button\" onClick={this.renderPhoto} > Random </button>\n        </div>\n        <div className=\"image\">\n          <div className=\"top-text-container\" >\n            <span className=\"top-text\" style={spanStyle}> {this.state.topValue} </span>\n          </div>\n          <div className=\"photo\">\n            <img src={this.state.url} />\n          </div>\n          <div className=\"bottom-text-container\">\n          <span className=\"bottom-text\" style={spanStyle}> {this.state.bottomValue} </span>\n          </div>\n        </div>\n      </div>\n    );\n\n    return(\n      <div className=\"full-page\" >\n       {renderFull}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}