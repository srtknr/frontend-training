{"ast":null,"code":"var _jsxFileName = \"/Users/serhat.kenar/Desktop/RandomGenerator/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class RandomGenerate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topValue: \"React\",\n      bottomValue: \"Generator\",\n      fontValue: 70,\n      url: null,\n      memes: []\n    };\n\n    this.setValue = (value, key) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.renderPhoto = () => {\n      let randomNumber = Number(Math.floor(Math.random() * this.state.memes.length));\n      this.setState({\n        url: this.state.memes[randomNumber].url\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(function (response) {\n      return response.json();\n    }).then(myJson => {\n      let dataArray = myJson.data.memes;\n      let randomNumber = Number(Math.floor(Math.random() * this.state.memes.length));\n      this.setState({\n        memes: dataArray,\n        url: this.state.memes[this.randomNumber].url\n      });\n    });\n  }\n\n  render() {\n    const spanStyle = {\n      fontSize: this.state.fontValue + \"px\"\n    };\n    const renderFull = React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"string\",\n      placeholder: \"Please enter top text\",\n      className: \"input-top\",\n      value: this.state.topValue,\n      onChange: e => this.setValue(e.target.value, \"topValue\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"string\",\n      placeholder: \"Please enter bottom text\",\n      className: \"input-bottom\",\n      value: this.state.bottomValue,\n      onChange: e => this.setValue(e.target.value, \"bottomValue\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Please enter font size\",\n      className: \"input-font-size\",\n      value: this.state.fontValue,\n      onChange: e => this.setValue(e.target.value, \"fontValue\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"random-generate\",\n      onClick: this.renderPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Random \")), React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"top-text\",\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", this.state.topValue, \" \")), React.createElement(\"div\", {\n      className: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bottom-text\",\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", this.state.bottomValue, \" \"))));\n    return React.createElement(\"div\", {\n      className: \"full-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, renderFull);\n  }\n\n}","map":{"version":3,"sources":["/Users/serhat.kenar/Desktop/RandomGenerator/my-app/src/App.js"],"names":["React","RandomGenerate","Component","state","topValue","bottomValue","fontValue","url","memes","setValue","value","key","setState","renderPhoto","randomNumber","Number","Math","floor","random","length","componentDidMount","fetch","then","response","json","myJson","dataArray","data","render","spanStyle","fontSize","renderFull","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nexport default class RandomGenerate extends React.Component {\n  \n  state = {\n    topValue: \"React\",\n    bottomValue: \"Generator\",\n    fontValue: 70,\n    url: null,\n    memes: [],\n  }\n    \n    componentDidMount() {\n      fetch('https://api.imgflip.com/get_memes')\n        .then(function(response) {\n        return response.json();\n      })\n      .then(myJson => {\n        let dataArray = (myJson.data.memes);      \n        let randomNumber = Number(Math.floor(Math.random()*this.state.memes.length));\n        \n        this.setState({\n          memes: dataArray,\n          url : this.state.memes[this.randomNumber].url,\n        })\n      });\n    }\n  \n    \n    setValue = (value, key) => {\n      this.setState({\n        [key]: value,\n      });\n    };\n\n   renderPhoto = () => {\n      let randomNumber = Number(Math.floor(Math.random()*this.state.memes.length));\n      \n      this.setState({\n        url : this.state.memes[randomNumber].url,\n      })\n    }\n      \n    \n\n  render () {\n\n    const spanStyle = {\n      fontSize: this.state.fontValue +\"px\",\n    };\n\n    const renderFull = (\n      <div className=\"page\">\n        <div className=\"header\">\n        <input type=\"string\" placeholder=\"Please enter top text\" className=\"input-top\" value={this.state.topValue}  onChange={(e) => this.setValue(e.target.value, \"topValue\")} />\n        <input type=\"string\" placeholder=\"Please enter bottom text\" className=\"input-bottom\" value={this.state.bottomValue} onChange={(e) => this.setValue(e.target.value, \"bottomValue\")} />\n        <input type=\"number\" placeholder=\"Please enter font size\" className=\"input-font-size\" value={this.state.fontValue}  onChange={(e) => this.setValue(e.target.value, \"fontValue\")} />\n        <button type=\"button\" id=\"random-generate\" onClick={this.renderPhoto} > Random </button>\n        </div>\n        <div className= \"slider\">\n          <div className=\"top-text-container\" >\n            <span className=\"top-text\" style={spanStyle} > {this.state.topValue} </span>\n          </div>\n          <div className=\"photo\">\n            <img src={this.state.url} />\n          </div>\n          <div className=\"bottom-text-container\">\n          <span className=\"bottom-text\" style={spanStyle} > {this.state.bottomValue} </span>\n          </div>\n        </div>\n      </div>\n    );\n\n    return(\n      <div className=\"full-page\" >\n       {renderFull}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}