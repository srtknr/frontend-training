{"ast":null,"code":"var _jsxFileName = \"/Users/serhat.kenar/Desktop/RandomGenerator/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nexport default class RandomGenerate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.myArray = [{\n      id: 1,\n      src: \"https://images.unsplash.com/photo-1566728618788-11b888adb6b6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1312&q=80\"\n    }, {\n      id: 2,\n      src: \"https://images.unsplash.com/photo-1562184167-2b35a31ab178?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\"\n    }, {\n      id: 3,\n      src: \"https://images.unsplash.com/photo-1566640241442-bd59e5f70d08?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n    }, {\n      id: 4,\n      src: \"https://images.unsplash.com/photo-1566681990869-2ab77a7b6461?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\"\n    }, {\n      id: 5,\n      src: \"https://images.unsplash.com/photo-1566793474285-2decf0fc182a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\"\n    }];\n    this.state = {\n      topValue: \"\",\n      bottomValue: \"\",\n      fontValue: 20,\n      id: 1,\n      memes: []\n    };\n\n    this.setValue = (value, key) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.renderPhoto = () => {\n      let randomNumber = Number(Math.floor(Math.random() * 100));\n      let photos = this.state.memes;\n      console.log(photos, randomNumber);\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(function (response) {\n      return response.json();\n    }).then(myJson => {\n      let dataArray = JSON.parse(myJson.data.memes);\n      this.setState({\n        memes: dataArray\n      });\n    });\n  }\n\n  render() {\n    const spanStyle = {\n      fontSize: this.state.fontValue + \"px\"\n    };\n    const renderFull = React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"string\",\n      placeholder: \"Please enter top text\",\n      className: \"input-top\",\n      value: this.state.topValue,\n      onChange: e => this.setValue(e.target.value, \"topValue\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"string\",\n      placeholder: \"Please enter bottom text\",\n      className: \"input-bottom\",\n      value: this.state.bottomValue,\n      onChange: e => this.setValue(e.target.value, \"bottomValue\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Please enter font size\",\n      className: \"input-font-size\",\n      value: this.state.fontValue,\n      onChange: e => this.setValue(e.target.value, \"fontValue\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"random-generate\",\n      onClick: this.renderPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Random \")), React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"top-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"top-text\",\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", this.state.topValue, \" \")), React.createElement(\"div\", {\n      className: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.myArray[this.state.id].src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom-text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bottom-text\",\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" \", this.state.bottomValue, \" \"))));\n    return React.createElement(\"div\", {\n      className: \"full-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, renderFull);\n  }\n\n}","map":{"version":3,"sources":["/Users/serhat.kenar/Desktop/RandomGenerator/my-app/src/App.js"],"names":["React","RandomGenerate","Component","myArray","id","src","state","topValue","bottomValue","fontValue","memes","setValue","value","key","setState","renderPhoto","randomNumber","Number","Math","floor","random","photos","console","log","componentDidMount","fetch","then","response","json","myJson","dataArray","JSON","parse","data","render","spanStyle","fontSize","renderFull","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nexport default class RandomGenerate extends React.Component {\n\n    myArray = [\n      {\n        id: 1,\n        src: \"https://images.unsplash.com/photo-1566728618788-11b888adb6b6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1312&q=80\",\n      },\n      {\n        id: 2,\n        src: \"https://images.unsplash.com/photo-1562184167-2b35a31ab178?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\",\n      },\n      {\n        id: 3,\n        src: \"https://images.unsplash.com/photo-1566640241442-bd59e5f70d08?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n      },\n      {\n        id: 4,\n        src: \"https://images.unsplash.com/photo-1566681990869-2ab77a7b6461?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\n      },\n      {\n        id:5,\n        src: \"https://images.unsplash.com/photo-1566793474285-2decf0fc182a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\n      },\n    ]\n    \n    state = {\n      topValue: \"\",\n      bottomValue: \"\",\n      fontValue: 20,\n      id: 1,\n      memes: [],\n    }\n    \n    componentDidMount() {\n      fetch('https://api.imgflip.com/get_memes')\n        .then(function(response) {\n        return response.json();\n      })\n      .then(myJson => {\n        let dataArray = JSON.parse(myJson.data.memes);      \n        \n        this.setState({\n          memes: dataArray,\n        })\n      });\n    }\n  \n    \n    setValue = (value, key) => {\n      this.setState({\n        [key]: value,\n      });\n    };\n\n   renderPhoto = () => {\n      let randomNumber = Number(Math.floor(Math.random()*100));\n      let photos = this.state.memes;\n    \n      console.log(photos,randomNumber)\n      }\n      \n    \n\n  render () {\n\n    const spanStyle = {\n      fontSize: this.state.fontValue +\"px\",\n    };\n\n    const renderFull = (\n      <div className=\"page\">\n        <div className=\"header\">\n        <input type=\"string\" placeholder=\"Please enter top text\" className=\"input-top\" value={this.state.topValue}  onChange={(e) => this.setValue(e.target.value, \"topValue\")} />\n        <input type=\"string\" placeholder=\"Please enter bottom text\" className=\"input-bottom\" value={this.state.bottomValue} onChange={(e) => this.setValue(e.target.value, \"bottomValue\")} />\n        <input type=\"number\" placeholder=\"Please enter font size\" className=\"input-font-size\" value={this.state.fontValue}  onChange={(e) => this.setValue(e.target.value, \"fontValue\")} />\n        <button type=\"button\" id=\"random-generate\" onClick={this.renderPhoto} > Random </button>\n        </div>\n        <div className= \"slider\">\n          <div className=\"top-text-container\" >\n            <span className=\"top-text\" style={spanStyle} > {this.state.topValue} </span>\n          </div>\n          <div className=\"photo\">\n            <img src={this.myArray[this.state.id].src} />\n          </div>\n          <div className=\"bottom-text-container\">\n          <span className=\"bottom-text\" style={spanStyle} > {this.state.bottomValue} </span>\n          </div>\n        </div>\n      </div>\n    );\n\n    return(\n      <div className=\"full-page\" >\n       {renderFull}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}